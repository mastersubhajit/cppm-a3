# Name of this workflow
name: Build-Test
# Name of this run
run-name: ${{ github.actor }} Building and Testing
# When this action will be trigger
# I want to do this when we push new change with tag.
# This tag will be used next when we build and push the image to dockerhub
on:
  push:
    tags:
      - 'v*'
# There can be multiple jobs
jobs:
  # Job name
  build-test:
    # Target machine that this job will run on.
    # ubuntu-latest or ubuntu-22.04 is the same image (as is August 2023)
    runs-on: ubuntu-latest
    # Tasks, specify in list.
    steps:
      # https://github.com/actions/checkout: will clone Git into the image
      - uses: actions/checkout@v4
      # Execute terminal command.
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          env_MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          env_APP_MODEL_NAME: ${{ secrets.APP_MODEL_NAME }}
          file_name: .env
          fail_on_empty: true
          sort_keys: true
      - name: Build the Docker image
        run: docker compose build
      - name: Compose up
        run: docker compose up -d
      - name: Wait for services
        run: sleep 10
      # Execute pytest
      - name: Run unit tests
        run: |
          docker compose run --rm cppm pip install pytest
          docker compose run --rm cppm pytest -v
      # If the testing pass, upload the image
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Your image name
          images: mastersubhajit/cppm-app
          tags: ${{ github.ref_name }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Cleanup
        if: always()
        run: docker compose down
  deploy:
    environment: production
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          proxy_host: ${{ vars.PROXY_HOST }}
          proxy_username: ${{ secrets.USERNAME }}
          proxy_key: ${{ secrets.KEY }}
          script: |
            export TAG=${{ github.ref_name }}
            docker compose -f docker-compose.yml down || true
            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml up -d