name: Deploy to Production

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta-app
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/cppm-app
        
    - name: Extract metadata for MLflow
      id: meta-mlflow  
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/cppm-mlflow
        
    - name: Build and push Docker image (App)
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta-app.outputs.tags }}
        labels: ${{ steps.meta-app.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push Docker image (MLflow)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./mlflow.Dockerfile
        push: true
        tags: ${{ steps.meta-mlflow.outputs.tags }}
        labels: ${{ steps.meta-mlflow.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to staging
      if: github.event.inputs.environment == 'staging' || (github.ref == 'refs/heads/master' && github.event_name == 'push')
      run: |
        echo "Deploying to staging environment"
        echo "App image: ${{ steps.meta-app.outputs.tags }}"
        echo "MLflow image: ${{ steps.meta-mlflow.outputs.tags }}"
        # Add your staging deployment commands here
        # Example: kubectl, docker-compose, or cloud deployment scripts
        
    - name: Deploy to production
      if: github.event.inputs.environment == 'production' || startsWith(github.ref, 'refs/tags/v')
      run: |
        echo "Deploying to production environment"
        echo "App image: ${{ steps.meta-app.outputs.tags }}"
        echo "MLflow image: ${{ steps.meta-mlflow.outputs.tags }}"
        # Add your production deployment commands here
        # Example: kubectl, docker-compose, or cloud deployment scripts
        
  notify:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.build-and-deploy.result }}" == "success" ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi